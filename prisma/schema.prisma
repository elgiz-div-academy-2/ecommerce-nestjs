generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String?   @unique 
  password  String
  phone String? @unique
  provider UserProvider @default(LOCAL)
  providerId String?
  providerType ProviderType? @default(EMAIL)
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum ProviderType {
  GOOGLE
  PHONE
  FACEBOOK
  EMAIL
}

enum UserProvider {
  LOCAL
  FIREBASE
}

enum UserRole {
  USER
  ADMIN
}

model Translation {
  id Int @id @default(autoincrement())

  lang String
  model String
  modelId Int
  field String
  value String

  Category Category[] @relation("CategoryTranslation")

  @@unique([lang, model, modelId, field])
}

model Category {
  id   Int    @id @default(autoincrement())

  translations Translation[] @relation("CategoryTranslation")

  parent   Category? @relation("ParentCategory", onDelete: Cascade, fields: [parentId], references: [id])
  parentId Int?

  children Category[] @relation("ParentCategory")

  products Product[]
}

model Product {
  id Int @id @default(autoincrement())

  title       String
  slug        String
  description String

  categories Category[]

  specs ProductSpec[]

  variants ProductVariant[]
}

model ProductSpec {
  id   Int    @id @default(autoincrement())
  key  String
  name String

  values    ProductSpecValue[]
  Product   Product?           @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int?
}

model ProductSpecValue {
  id Int @id @default(autoincrement())

  key           String
  value         String
  ProductSpec   ProductSpec? @relation(fields: [productSpecId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productSpecId Int?
}

model ProductVariant {
  id Int @id @default(autoincrement())

  stock    Int      @default(0)
  price    Decimal
  discount Int      @default(0)
  slug     String
  images   String[]

  specs ProductVariantSpec[]

  Product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int?
}

model ProductVariantSpec {
  id Int @id @default(autoincrement())

  key              String
  value            String
  ProductVariant   ProductVariant? @relation(fields: [productVariantId], references: [id], onDelete: Cascade)
  productVariantId Int?
}
